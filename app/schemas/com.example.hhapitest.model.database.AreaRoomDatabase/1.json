{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "6d8700d20c868786d1d5938a6eec38e7",
    "entities": [
      {
        "tableName": "AreaRoom",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `parentId` TEXT, `name` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RequestRoom",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `request` TEXT NOT NULL, `employerName` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "request",
            "columnName": "request",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "employerName",
            "columnName": "employerName",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ResponseRoom",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `publishAt` TEXT NOT NULL, `url` TEXT NOT NULL, `altUrl` TEXT NOT NULL, `createDB` TEXT NOT NULL, `updateDB` TEXT NOT NULL, `requestID` INTEGER, `department_id` TEXT, `department_name` TEXT, `area_id` INTEGER, `area_name` TEXT, `area_url` TEXT, `salary_from` INTEGER, `salary_to` INTEGER, `salary_currency` TEXT, `salary_gross` INTEGER, `type_id` TEXT, `type_name` TEXT, `address_city` TEXT, `address_street` TEXT, `address_building` TEXT, `address_description` TEXT, `address_lat` REAL, `address_lng` REAL, `address_raw` TEXT, `address_metro` TEXT, `address_id` INTEGER, `employer_id` INTEGER, `employer_name` TEXT, `employer_url` TEXT, `employer_alternate_url` TEXT, `employer_vacancies_url` TEXT, `employer_trusted` INTEGER, `snippetrequirement` TEXT, `snippetresponsibility` TEXT, PRIMARY KEY(`id`, `publishAt`), FOREIGN KEY(`requestID`) REFERENCES `RequestRoom`(`id`) ON UPDATE CASCADE ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publishAt",
            "columnName": "publishAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "altUrl",
            "columnName": "altUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createDB",
            "columnName": "createDB",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updateDB",
            "columnName": "updateDB",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "requestID",
            "columnName": "requestID",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "department.id",
            "columnName": "department_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "department.name",
            "columnName": "department_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "area.id",
            "columnName": "area_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "area.name",
            "columnName": "area_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "area.url",
            "columnName": "area_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "salary.from",
            "columnName": "salary_from",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "salary.to",
            "columnName": "salary_to",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "salary.currency",
            "columnName": "salary_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "salary.gross",
            "columnName": "salary_gross",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type.id",
            "columnName": "type_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type.name",
            "columnName": "type_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.city",
            "columnName": "address_city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.street",
            "columnName": "address_street",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.building",
            "columnName": "address_building",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.description",
            "columnName": "address_description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.lat",
            "columnName": "address_lat",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "address.lng",
            "columnName": "address_lng",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "address.raw",
            "columnName": "address_raw",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.metro",
            "columnName": "address_metro",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address.id",
            "columnName": "address_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "employer.id",
            "columnName": "employer_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "employer.name",
            "columnName": "employer_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "employer.url",
            "columnName": "employer_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "employer.alternate_url",
            "columnName": "employer_alternate_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "employer.vacancies_url",
            "columnName": "employer_vacancies_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "employer.trusted",
            "columnName": "employer_trusted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "snippet.requirement",
            "columnName": "snippetrequirement",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "snippet.responsibility",
            "columnName": "snippetresponsibility",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "publishAt"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_ResponseRoom_createDB",
            "unique": false,
            "columnNames": [
              "createDB"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ResponseRoom_createDB` ON `${TABLE_NAME}` (`createDB`)"
          },
          {
            "name": "index_ResponseRoom_requestID",
            "unique": false,
            "columnNames": [
              "requestID"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ResponseRoom_requestID` ON `${TABLE_NAME}` (`requestID`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "RequestRoom",
            "onDelete": "SET NULL",
            "onUpdate": "CASCADE",
            "columns": [
              "requestID"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '6d8700d20c868786d1d5938a6eec38e7')"
    ]
  }
}